---

- name: populate /etc/environment
  lineinfile:
    path: "/etc/environment"
    state: present
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value}}"

  with_items: "{{ os_environment }}"
  become: yes

  vars:
    os_environment:
      - key: ENVIRONMENT
        value: "production"
      - key: TYPEORM_CONNECTION
        value: "{{ lookup('env','TYPEORM_CONNECTION') }}"
      - key: TYPEORM_ENTITIES
        value: "{{ lookup('env','TYPEORM_ENTITIES') }}"
      - key: TYPEORM_MIGRATIONS
        value: "{{ lookup('env','TYPEORM_MIGRATIONS') }}"
      - key: TYPEORM_MIGRATIONS_DIR
        value: "{{ lookup('env','TYPEORM_MIGRATIONS_DIR') }}"
      - key: TYPEORM_HOST
        value: "{{ lookup('env','TYPEORM_HOST') }}"
      - key: TYPEORM_PORT
        value: "{{ lookup('env','TYPEORM_PORT') }}"
      - key: TYPEORM_USERNAME
        value: "{{ lookup('env','TYPEORM_USERNAME') }}"
      - key: TYPEORM_PASSWORD
        value: "{{ lookup('env','TYPEORM_PASSWORD') }}"
      - key: TYPEORM_DATABASE
        value: "{{ lookup('env','TYPEORM_DATABASE') }}"
      - key: TYPEORM_MIGRATIONS_DIR
        value: ./migrations
      - key: TYPEORM_ENTITIES
        value: ./modules/domain/**/*.entity{.ts,.js}
      - key: TYPEORM_MIGRATIONS
        value: ./migrations/*{.ts,.js}

- name: "copy backend binaries"
  become: true
  synchronize:
    src: ../../backend
    dest: /home/ubuntu/udapeople
    recursive: true
    rsync_opts:
      - "--exclude=node_modules"
      - "--exclude=dist"

- name: "Delete any running pm2 app"
  become: true
  command: pm2 delete all
  ignore_errors: true

- name: "Install"
  become: true
  command: npm install
  args:
    chdir: /home/ubuntu/udapeople/backend
  ignore_errors: true

- name: "Build"
  become: true
  shell: |
    export NODE_ENV=production
    npm run build
  args:
    chdir: /home/ubuntu/udapeople/backend
  ignore_errors: true

- name: "Start server"
  command: pm2 start main.js
  args:
    chdir: /home/ubuntu/udapeople/backend/dist
